events {
    worker_connections  16;
}
# Strapi server
http {
    upstream strapi {
        server backend:1337;
    }
    server {
        listen 80;
        server_name 192.168.7.200 localhost;
        rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
        rewrite ^/(.*)/$ /$1 permanent;
        # location / {
        #     proxy_pass http://backend:1337/;
        #     proxy_redirect off;
        # }
        location ~ /backend/.*\.(html|jpg|gif|png|css|js|json|ico) {
            rewrite ^/backend/(.*)$ /$1 break;
            proxy_pass http://strapi;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass_request_headers on;
            expires 30d;
        }
        location /backend/ {
            rewrite ^/backend/(.*)$ /$1 break;
            proxy_pass http://strapi;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass_request_headers on;
        }
        location ~ /.*\.(html|jpg|gif|png|css|js|json|ico) {
            root /usr/share/nginx/html;
            try_files $uri/index.html $uri.html $uri/ $uri =404;
            expires 30d;
	}
	location / {
            root /usr/share/nginx/html;
            try_files $uri/index.html $uri.html $uri/ $uri =404;
	}
        # location / {
        #     proxy_pass http://frontend:8080/;
        #     proxy_redirect off;
        # }
    }
    server {
        listen       80;
        server_name  meganetaaan.jp;
        return       301 https://$host$request_uri;
    }
    server {
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        server_name meganetaaan.jp;
        rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
        rewrite ^/(.*)/$ /$1 permanent;

        # ssl_certificate           /etc/letsencrypt/live/meganetaaan.jp/fullchain.pem;
        # ssl_certificate_key       /etc/letsencrypt/live/meganetaaan.jp/privkey.pem;
        # ssl_session_cache         shared:SSL:10m;
        # ssl_session_timeout       10m;
        # ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        # ssl_prefer_server_ciphers on;
        # ssl_ciphers               HIGH:!aNULL:!MD5;
        # ssl_ciphers  'ECDH !aNULL !eNULL !SSLv2 !SSLv3';
        # add_header  Strict-Transport-Security "max-age=31536000; includeSubdomains";

        keepalive_timeout	75;
        # location /backend {
        #     proxy_pass http://backend:1337/;
        #     proxy_redirect off;
        # }
        # Strapi API and Admin
        location /backend/ {
            rewrite ^/backend/(.*)$ /$1 break;
            proxy_pass http://strapi;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass_request_headers on;
	    location ~ .*\.(html|jpg|gif|png|css|js) {
                expires 30d;
            }
        }
	location / {
            root /usr/share/nginx/html;
            try_files $uri/index.html $uri.html $uri/ $uri =404;
	    location ~ .*\.(html|jpg|gif|png|css|js) {
                expires 30d;
            }
	}
        # location / {
        #     proxy_pass http://frontend:8080/;
        #     proxy_redirect off;
        # }
    }
}
